// booking_page.dart

import 'package:flutter/material.dart';
import 'package:http/src/response.dart';
import 'package:provider/provider.dart';
import 'package:talhadnad/api_client/lib/api.dart';
import 'package:talhadnad/model/slot.dart';
import 'package:talhadnad/model/user_model.dart';
import 'package:talhadnad/widgets/market_latout.dart';

class BookingPage extends StatefulWidget {
  final String? marketId;
  final String? bookingId;

  const BookingPage({
    this.marketId,
    this.bookingId,
    super.key,
  });

  @override
  State<BookingPage> createState() => _BookingPageState();
}

class _BookingPageState extends State<BookingPage> {
  String? selectedSlot;
  Map<String, SlotStatus> slotStatuses = {};

  @override
  void initState() {
    super.initState();
    // Initialize all slots as Unselected
    for (var zone in ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']) {
      for (var i = 1; i <= 5; i++) {
        slotStatuses['$zone-$i'] = SlotStatus.Unselected;
      }
    }
  }

  void updateSlotStatus(String slotId) {
    setState(() {
      if (selectedSlot == slotId) {
        slotStatuses[slotId] = SlotStatus.Unselected;
        selectedSlot = null;
      } else {
        if (selectedSlot != null) {
          slotStatuses[selectedSlot!] = SlotStatus.Unselected;
        }
        slotStatuses[slotId] = SlotStatus.Selected;
        selectedSlot = slotId;
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFF14213D),
      body: Stack(
        children: [
          Column(
            children: [
              Container(
                height: 232,
                width: double.infinity,
                color: const Color(0xFF14213D),
                child: SafeArea(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      const Padding(
                        padding: EdgeInsets.only(bottom: 10),
                        child: SizedBox(
                          height: 50,
                          width: double.infinity,
                        ),
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          IconButton(
                            icon: const Icon(Icons.arrow_back,
                                color: Colors.white),
                            onPressed: () => Navigator.of(context).pop(),
                          ),
                          Row(
                            children: [
                              IconButton(
                                icon: const Icon(Icons.calendar_today,
                                    color: Colors.white),
                                onPressed:
                                    () {}, // Add calendar functionality if needed
                              ),
                              IconButton(
                                icon: const Icon(Icons.more_vert,
                                    color: Colors.white),
                                onPressed:
                                    () {}, // Add more options functionality if needed
                              ),
                            ],
                          ),
                        ],
                      ),
                      const Expanded(
                        child: Center(
                          child: Text(
                            'Kmutt Market',
                            style: TextStyle(
                              fontFamily: 'Quicksand',
                              color: Colors.white,
                              fontSize: 28,
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                        ),
                      ),
                      const Padding(
                        padding: EdgeInsets.only(
                            top: 12, left: 16, right: 16, bottom: 23),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                          children: [
                            Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Text(
                                  '6:00 AM',
                                  style: TextStyle(
                                      color: Colors.white, fontSize: 16),
                                ),
                                Text(
                                  '31 March',
                                  style: TextStyle(
                                      color: Colors.white70, fontSize: 14),
                                ),
                              ],
                            ),
                            Icon(Icons.calendar_today, color: Colors.white),
                            Column(
                              crossAxisAlignment: CrossAxisAlignment.end,
                              children: [
                                Text(
                                  '11:59 PM',
                                  style: TextStyle(
                                      color: Colors.white, fontSize: 16),
                                ),
                                Text(
                                  '31 March',
                                  style: TextStyle(
                                      color: Colors.white70, fontSize: 14),
                                ),
                              ],
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              Container(
                height: 18,
                width: double.infinity,
                color: const Color.fromARGB(255, 208, 208, 208),
              ),
              Expanded(
                child: InteractiveViewer(
                  child: MarketLayout(
                    onSlotSelected: updateSlotStatus,
                    slotStatuses: slotStatuses,
                  ),
                ),
              ),
              Container(
                color: Colors.white,
                height: 101,
                child: Padding(
                  padding: const EdgeInsets.symmetric(
                      horizontal: 16.0, vertical: 8.0),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Text(
                            selectedSlot != null
                                ? 'ZONE - ${selectedSlot!.split('-')[0]}'
                                : 'No Zone Selected',
                            style: const TextStyle(
                              color: Colors.grey,
                              fontSize: 14,
                              fontWeight: FontWeight.w500,
                              fontFamily: 'Quicksand',
                            ),
                          ),
                          const SizedBox(height: 4),
                          Text(
                            selectedSlot != null
                                ? selectedSlot!.split('-')[1]
                                : 'No Slot Selected',
                            style: const TextStyle(
                              fontFamily: 'Quicksand',
                              color: Colors.black,
                              fontSize: 24,
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                        ],
                      ),
                      ElevatedButton(
                        onPressed: selectedSlot != null
                            ? () {
                                // Add your confirm action here
                                print('Booked slot: $selectedSlot');
                              }
                            : null,
                        style: ElevatedButton.styleFrom(
                          backgroundColor: const Color(0xFF5CB793),
                          minimumSize: const Size(120, 50),
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Text(
                          'Confirm',
                          style: TextStyle(
                            fontFamily: 'Quicksand',
                            color: Colors.white,
                            fontSize: 16,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
          // Positioned(
          //   top: MediaQuery.of(context).size.height * 0.23,
          //   left: 16,
          //   right: 16,
          //   child: const StatusArea(),
          // ),
        ],
      ),
    );
  }
}
